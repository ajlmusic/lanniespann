{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","useState","username","setUsername","password","setPassword","token","setToken","msg","setMsg","isAuth","setIsAuth","today","Date","date","getFullYear","getMonth","getDate","useEffect","localStorage","setItem","handleSubmit","e","a","preventDefault","axios","post","method","mode","headers","withCredentials","credentials","response","data","result","console","log","error","Ballot","className","Alert","onSubmit","htmlFor","type","id","name","value","onChange","target","placeholder","required","autoFocus","role","url","handleAccept","election_id","candidate_id","ballot_response","alert","handleDoNotAccept","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ce5f617.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nexport default function LoginForm(props) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [token, setToken] = useState('');\n    const [msg, setMsg] = useState('')\n    const [isAuth, setIsAuth] = useState(false)\n\n    let today = new Date();\n\n    let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    // let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    useEffect(() => {\n        localStorage.setItem('token', token);\n\n    }, [token])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n\n        try {\n            const response = await axios.post('http://localhost:3000/auth/register', { username: username, password: password },{\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      },\n      withCredentials: true,\n      credentials: 'same-origin',\n    });\n            setToken(response.data.result.token)\n\n\n            setMsg(response.data.result.msg)\n\n            console.log(response.data.result);\n            setIsAuth(true)\n        } catch (error) {\n            console.error(error)\n        }\n\n\n\n\n    }\n\n\n    if (isAuth) {\n        return (\n\n            <div>\n                <Ballot date={date} token={token} />\n            </div>\n\n        )\n    }\n    else {\n        return (\n            <div className=\"text-center\">\n\n                <Alert msg={msg} />\n                <form className=\"form-signin\" onSubmit={handleSubmit}>\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                    <label htmlFor=\"inputUsername\" className=\"sr-only\">Member ID</label>\n                    <input type=\"text\" id=\"inputUsername\" name=\"username\" value={username} onChange={e => setUsername(e.target.value)} className=\"form-control\" placeholder=\"Member ID\" required autoFocus />\n                    <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n                    <input type=\"password\" id=\"inputPassword\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\"form-control\" placeholder=\"Password\" required />\n\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" >Sign in</button>\n                    <p className=\"mt-5 mb-3 text-muted\">&copy; 2021</p>\n                </form>\n\n            </div>\n\n        )\n    }\n}\n\n\nfunction Alert(props) {\n\n    if (props.msg) {\n        return (\n            <div className=\"alert alert-warning\" role=\"alert\">\n                {props.msg}\n            </div>\n        )\n    } else {\n        return (\n            <></>\n        )\n    }\n}\n\n\nfunction Ballot(props) {\n\n\n    let url = 'http://localhost:3000/ballot/create'\n\n\n    const handleAccept = async (e) => {\n        e.preventDefault()\n        console.log(props.token);\n\n        // let response = {\n        //     election_id: 1,\n        //     candidate_id: 1,\n        //     ballot_response: 'ACCEPT'\n\n        // }\n        try {\n\n            const response = await axios.post(url, {\n                election_id: 1,\n                candidate_id: 1,\n                ballot_response: 'ACCEPT'\n            }\n                , {\n                    headers: { 'Authorization': `Bearer ${props.token}` }\n                })\n\n\n            alert('Thank you for voting.')\n            console.log(response);\n        } catch (error) {\n            alert(\"Duplicates not allowed\")\n        }\n\n\n\n    }\n\n\n    const handleDoNotAccept = async (e) => {\n        e.preventDefault()\n\n        try {\n\n            const response = await axios.post(url, {\n                election_id: 1,\n                candidate_id: 1,\n                ballot_response: 'DO NOT ACCEPT'\n            }\n                , {\n                    headers: { 'Authorization': `Bearer ${props.token}` }\n                })\n\n\n            alert('Thank you for voting.')\n            console.log(response);\n        } catch (error) {\n            alert(\"Duplicates not allowed!\")\n        }\n\n\n\n\n\n        console.log(props.token);\n    }\n\n    return (\n        <div className=\"card\">\n            <h5 className=\"card-header text-center\">Ballot ({props.date})</h5>\n            <div className=\"card-body\">\n\n                <div className=\"card-body\">\n                    <p className=\"card-text\">\n                        <i>   The Pastor Search Committee recommends the following candidate for the Office of Pastor:The Pastor Search Committee recommends the following candidate for the Office of Pastor:A Pastor shall be elected by the Church membership when the vacancy occurs. The election shall take place at a meeting called especially for that purpose. One week’s public notice shall be given. Voting shall be by ballot. (ARTICLE II Section 1 Clause C – College Hill Constitution and By-Laws)\n                 </i></p>\n                    <p className=\"card-text\"><strong>\n                        The Pastor Search Committee recommends the following candidate for the Office of Pastor:</strong>\n                    </p>\n                    <h5 className=\"card-text center\">\n                        Reverend Chauncy L. Jordan, Sr.\n\n</h5>\n                </div>\n                <form onSubmit={handleAccept}>\n                    <input type=\"hidden\" name=\"reponse \" value=\"ACCEPT\" />\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">I ACCEPT    </button>\n\n                </form>\n                <form onSubmit={handleDoNotAccept}>\n                    <input type=\"hidden\" name=\"reponse2 \" value=\"DO NOT ACCEPT\" />\n                    <button type=\"submit\" className=\"btn btn-secondary btn-lg btn-block\">I DO NOT ACCEPT    </button>\n\n                </form>\n\n                <p className=\"m-3 card-text\">the Recommendation of the Pastor Search Committee.</p>\n\n\n            </div>\n        </div>\n    )\n}\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginForm from './components/LoginForm'\n\nfunction App() {\n  return (\n\n    <div className=\"container-fluid\">\n      <div className=\"text-center\">\n        <h3>CHMBC Ballot</h3>\n      </div>\n      <LoginForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}